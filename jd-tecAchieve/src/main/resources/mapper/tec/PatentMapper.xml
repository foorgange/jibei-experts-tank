<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jd.tecachieve.mapper.PatentMapper">
    <resultMap type="com.jd.tecachieve.domain.Patent" id="PatentResult">
        <id property="id" column="id" />
        <result property="publicationNumber" column="publicationNumber" />
        <result property="applicationNumber" column="applicationNumber" />
        <result property="applicationDate" column="applicationDate" />
        <result property="patentName" column="patentName" />
        <result property="abstractText" column="abstractText" />
        <result property="mainClaim" column="mainClaim" />
        <result property="agency" column="agency" />
        <result property="inventors" column="inventors" />
        <result property="applicants" column="applicants" />
        <result property="applicantCountry" column="applicantCountry" />
        <result property="publicationDate" column="publicationDate" />
        <result property="ipcClass" column="ipcClass" />
        <result property="remark" column="remark" />
        <result property="createTime" column="createTime" />
        <result property="updateTime" column="updateTime" />
    </resultMap>

    <!-- 定义resultMap -->
    <resultMap id="map" type="map">
        <!-- 自动映射所有字段到Map -->
    </resultMap>

    <resultMap id="MonthCountResult" type="map">
        <result property="month" column="month"/>
        <result property="open_count" column="open_count"/>
        <result property="authorize_count" column="authorize_count"/>
        <result property="total_records" column="total_records"/>
    </resultMap>




    <resultMap id="TotalGrantedPatentsResult" type="map">
        <result property="totalpatentgranted" column="totalpatentgranted"/>
        <result property="totalinventiongranted" column="totalinventiongranted"/>
    </resultMap>

    <sql id="selectPatentInfoVo">
        select
        patent_info.id as id,
        patent_info.publication_number as publicationNumber,
        patent_info.application_number as applicationNumber,
        STR_TO_DATE(patent_info.application_date, '%Y.%m.%d') AS applicationDate,
        patent_info.patent_name as patentName,
        patent_info.abstract as abstractText, <!-- 注意：'abstract'是保留字，最好使用别名 -->
        patent_info.main_claim as mainClaim,
        patent_info.agency as agency,
        patent_info.inventors as inventors,
        patent_info.applicants as applicants,
        patent_info.applicant_country as applicantCountry,
        patent_info.publication_date as publicationDate,
        patent_info.ipc_class as ipcClass,
        patent_info.remark as remark,
        patent_info.create_time as createTime,
        patent_info.update_time as updateTime
        from patent_info patent_info
    </sql>

    <!-- 动态查询专利列表 -->
    <select id="selectPatentList" parameterType="com.jd.tecachieve.vo.PatentQueryVo" resultMap="PatentResult">
        <include refid="selectPatentInfoVo"/>
        <where>
            <if test="publicationNumber != null and publicationNumber != ''">
                AND publication_number LIKE CONCAT('%', #{publicationNumber}, '%')
            </if>
            <if test="applicationNumber != null and applicationNumber != ''">
                AND application_number LIKE CONCAT('%', #{applicationNumber}, '%')
            </if>
            <if test="patentName != null and patentName != ''">
                AND patent_name LIKE CONCAT('%', #{patentName}, '%')
            </if>
            <if test="agency != null and agency != ''">
                AND agency LIKE CONCAT('%', #{agency}, '%')
            </if>
            <if test="inventors != null and inventors != ''">
                AND inventors LIKE CONCAT('%', #{inventors}, '%')
            </if>
            <if test="applicants != null and applicants != ''">
                AND applicants LIKE CONCAT('%', #{applicants}, '%')
            </if>
            <if test="applicantCountry != null and applicantCountry != ''">
                AND applicant_country LIKE CONCAT('%', #{applicantCountry}, '%')
            </if>
            <if test="ipcClass != null and ipcClass != ''">
                AND ipc_class LIKE CONCAT('%', #{ipcClass}, '%')
            </if>
            <if test="remark != null and remark != ''">
                AND remark LIKE CONCAT('%', #{remark}, '%')
            </if>
        </where>
    </select>

    <select id="selectPatentListByPatentQueryVo" parameterType="com.jd.tecachieve.domain.Patent" resultMap="PatentResult">
        <include refid="selectPatentInfoVo"/>
        <where>
            <if test="publicationNumber != null and publicationNumber != ''">
                AND publication_number LIKE CONCAT('%', #{publicationNumber}, '%')
            </if>
            <if test="applicationNumber != null and applicationNumber != ''">
                AND application_number LIKE CONCAT('%', #{applicationNumber}, '%')
            </if>
            <if test="patentName != null and patentName != ''">
                AND patent_name LIKE CONCAT('%', #{patentName}, '%')
            </if>
            <if test="agency != null and agency != ''">
                AND agency LIKE CONCAT('%', #{agency}, '%')
            </if>
            <if test="inventors != null and inventors != ''">
                AND inventors LIKE CONCAT('%', #{inventors}, '%')
            </if>
            <if test="applicants != null and applicants != ''">
                AND applicants LIKE CONCAT('%', #{applicants}, '%')
            </if>
            <if test="applicantCountry != null and applicantCountry != ''">
                AND applicant_country LIKE CONCAT('%', #{applicantCountry}, '%')
            </if>
            <if test="ipcClass != null and ipcClass != ''">
                AND ipc_class LIKE CONCAT('%', #{ipcClass}, '%')
            </if>
            <if test="remark != null and remark != ''">
                AND remark LIKE CONCAT('%', #{remark}, '%')
            </if>
        </where>
    </select>

    <delete id="deletePatentByPatentid" parameterType="Long">
        delete from patent_info where  Id = #{patentid}
    </delete>

    <!-- 查询所有专利信息 -->
    <select id="selectAllPatents" resultMap="map">
        <include refid="selectPatentInfoVo" />
    </select>


    <!-- 查询与山东建筑大学合作的前N个申请人及其专利申请数量 -->
    <select id="findDistinctApplicantsWithShanDongJianZhu" resultType="map">
        WITH RECURSIVE SplitApplicants AS (
            SELECT
                SUBSTRING_INDEX(applicants, '; ', 1) AS Applicant,
                IF(LENGTH(applicants) > LENGTH(SUBSTRING_INDEX(applicants, '; ', 1)),
                   SUBSTRING(SUBSTRING_INDEX(applicants, '; ', 2), LENGTH(SUBSTRING_INDEX(applicants, '; ', 1)) + 3),
                   '') AS remaining
            FROM patent_info
            WHERE applicants IS NOT NULL AND applicants != ''

        UNION ALL

        SELECT
            CASE
                WHEN LOCATE('; ', remaining) = 0 THEN remaining
                ELSE SUBSTRING_INDEX(remaining, '; ', 1)
                END AS Applicant,
            CASE
                WHEN LOCATE('; ', remaining) = 0 THEN ''
                ELSE SUBSTRING(remaining, LOCATE('; ', remaining) + 2)
                END AS remaining
        FROM SplitApplicants
        WHERE remaining IS NOT NULL AND remaining != '' AND remaining LIKE '%; %'
),
FilteredApplicants AS (
        SELECT
            TRIM(Applicant) AS Applicant
        FROM
            SplitApplicants
        WHERE
            Applicant NOT LIKE '%山东建筑大学%'
          AND Applicant NOT LIKE '%山东建大%'
          AND Applicant NOT LIKE '%山建大%'
            )
        SELECT
            Applicant,
            COUNT(*) AS Count
        FROM
            FilteredApplicants
        GROUP BY
            Applicant
        ORDER BY
            Count DESC
            LIMIT 5;
    </select>

    <!-- 查询所有的 ipc_class 数据 -->
    <select id="findAllIpcClasses" resultType="map">
        SELECT
            ipc_class
        FROM
            patent_info
    </select>


    <!-- 查询所有专利信息 -->
    <select id="findAll" resultType="Patent">
        SELECT id, ipc_class AS ipcClass
        FROM patent_info
    </select>


    <select id="getMonthlyCounts" resultMap="MonthCountResult">
        <![CDATA[
        WITH parsed_data AS (
            SELECT
                -- 提取年份信息，统一两种日期格式
                CASE
                    WHEN application_date LIKE '%.%.%' THEN SUBSTRING_INDEX(application_date, '.', 1)
                    ELSE SUBSTRING_INDEX(application_date, '-', 1)
                    END AS year,
             -- 判断是否为公开、授权或是其他状态
            CASE
            WHEN ipc_class LIKE '%==%' THEN
            CASE
            WHEN SUBSTRING_INDEX(ipc_class, '==', 1) <> '' AND SUBSTRING_INDEX(ipc_class, '==', -1) <> '' THEN 'both'
            WHEN SUBSTRING_INDEX(ipc_class, '==', 1) <> '' THEN 'published'
            WHEN SUBSTRING_INDEX(ipc_class, '==', -1) <> '' THEN 'authorized'
            ELSE 'none'
        END
        ELSE 'none'
        END AS status
    FROM patent_info
    WHERE
        (application_date LIKE '%.%.%' AND SUBSTRING_INDEX(application_date, '.', 1) BETWEEN '2019' AND '2024')
        OR
        (application_date LIKE '%-%-%' AND SUBSTRING_INDEX(application_date, '-', 1) BETWEEN '2019' AND '2024')
)
-- 计算每年的公开数、授权数和总数
        SELECT
            year,
            SUM(CASE WHEN status = 'published' OR status = 'both' THEN 1 ELSE 0 END) AS published_count,
            SUM(CASE WHEN status = 'authorized' OR status = 'both' THEN 1 ELSE 0 END) AS authorized_count,
            COUNT(*) AS total_count
        FROM parsed_data
        GROUP BY year
        ORDER BY year;
        ]]>
    </select>

    <select id="countByPublicationNumberEndingWith" resultType="long">
        SELECT COUNT(*)
        FROM patent_info
        WHERE publication_number LIKE CONCAT('%', #{type})
    </select>

    <!-- 查询有效的和无效的专利记录总数 -->
    <select id="getPatentStatusCounts" resultType="map">
        SELECT
            SUM(CASE WHEN status = 'Y' THEN 1 ELSE 0 END) AS valid_count,
            SUM(CASE WHEN status = 'N' THEN 1 ELSE 0 END) AS invalid_count
        FROM patent_info
    </select>



    <!-- 专利授权总量和发明授权总量 -->
    <select id="countTotalAndInventionPatentGranted" resultMap="TotalGrantedPatentsResult">
        <![CDATA[
        SELECT
            SUM(CASE WHEN ipc_class LIKE '%==%' AND TRIM(SUBSTRING_INDEX(ipc_class, '==', -1)) <> '' THEN 1 ELSE 0 END) AS totalpatentgranted,
            SUM(CASE WHEN publication_number LIKE 'CN%' AND publication_number LIKE '%A' AND ipc_class LIKE '%==%' AND TRIM(SUBSTRING_INDEX(ipc_class, '==', -1)) <> '' THEN 1 ELSE 0 END) AS totalinventiongranted
        FROM
            patent_info;
        ]]>
    </select>

    <select id="getPatentStatsComparison" resultType="map">
        WITH stats_2024 AS (
            SELECT
                SUM(CASE WHEN (application_date LIKE '2024-%' OR application_date LIKE '2024.%') THEN 1 ELSE 0 END) AS total_2024,
                SUM(CASE WHEN (application_date LIKE '2024-%' OR application_date LIKE '2024.%') AND publication_number LIKE 'CN%A' THEN 1 ELSE 0 END) AS invention_2024,
                SUM(CASE WHEN (application_date LIKE '2024-%' OR application_date LIKE '2024.%') AND publication_number LIKE 'CN%U' THEN 1 ELSE 0 END) AS utility_2024,
                SUM(CASE WHEN (application_date LIKE '2024-%' OR application_date LIKE '2024.%') AND publication_number LIKE 'CN%S' THEN 1 ELSE 0 END) AS design_2024
            FROM patent_info
        ),
             stats_2023 AS (
                 SELECT
                     SUM(CASE WHEN (application_date LIKE '2023-%' OR application_date LIKE '2023.%') THEN 1 ELSE 0 END) AS total_2023,
                     SUM(CASE WHEN (application_date LIKE '2023-%' OR application_date LIKE '2023.%') AND publication_number LIKE 'CN%A' THEN 1 ELSE 0 END) AS invention_2023,
                     SUM(CASE WHEN (application_date LIKE '2023-%' OR application_date LIKE '2023.%') AND publication_number LIKE 'CN%U' THEN 1 ELSE 0 END) AS utility_2023,
                     SUM(CASE WHEN (application_date LIKE '2023-%' OR application_date LIKE '2023.%') AND publication_number LIKE 'CN%S' THEN 1 ELSE 0 END) AS design_2023
                 FROM patent_info
             )
        SELECT
            s24.total_2024,
            s24.invention_2024,
            s24.utility_2024,
            s24.design_2024,
            (s24.invention_2024 - s23.invention_2023) AS increase_invention,
            (s24.utility_2024 - s23.utility_2023) AS increase_utility,
            (s24.design_2024 - s23.design_2023) AS increase_design
        FROM stats_2024 s24, stats_2023 s23
    </select>

    <select id="selectAllPatentStatistics" resultMap="map">
        SELECT
            id,
            designTotal,
            utilityModelTotal,
            inventionTotal,
            totalpatentgranted,
            totalinventiongranted,
            applicationTotal,
            valid_count,
            totalTransfers,
            totalLicenses,
            totalPledges,
            countYear,
            inventionPatent,
            utilityModelPatent,
            designPatent,
            a_class,
            b_class,
            c_class,
            d_class,
            e_class,
            f_class,
            h_class,
            g_class
        FROM patent_statistics
    </select>

    <select id="selectAllPatentList" resultMap="map">
        SELECT *
        FROM patent_list
    </select>


    <!-- 查询所有数据 -->
    <select id="selectAllPatentClass" resultMap="map">
        SELECT
            id,
            patent_name AS patentName,
            collaborator,
            operation_type AS operationType
        FROM
            patent_class
    </select>


    <!-- 动态更新方法 -->
    <update id="updatePatentStatistics" parameterType="map">
        UPDATE patent_statistics
        <set>
            <if test="field != null and value != null">
                ${field} = #{value}
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 动态更新 patent_total 表 -->
    <update id="updatePatentTotalByYear">
        UPDATE patent_total
        <set>
            <foreach collection="updates" index="field" item="value" separator=",">
                ${field} = #{value}
            </foreach>
        </set>
        WHERE year = #{year}
    </update>


    <!-- 动态更新字段 -->
    <update id="updateDynamicFields">
        UPDATE patent_list
        <set>
            <if test="field != null and fieldValue != null">
                ${field} = #{fieldValue},
            </if>
            <if test="countField != null and countValue != null">
                ${countField} = #{countValue},
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 根据 id 修改 patent_class 表中的字段 -->
    <update id="updateByPatentClassId" parameterType="map">
        UPDATE patent_class
        <set>
            <if test="params.patent_name != null">patent_name = #{params.patent_name},</if>
            <if test="params.collaborator != null">collaborator = #{params.collaborator},</if>
            <if test="params.operation_type != null">operation_type = #{params.operation_type},</if>
        </set>
        WHERE id = #{params.id}
    </update>

    <!-- 根据 id 删除对应行 -->
    <delete id="deleteById" parameterType="Long">
        DELETE FROM patent_class
        WHERE id = #{id}
    </delete>

    <insert id="insertPatentClass" parameterType="map">
        INSERT INTO patent_class (
            patent_name,
            collaborator,
            operation_type
        ) VALUES (
                     #{patentName},
                     #{collaborator},
                     #{operationType}
                 )
    </insert>

    <!-- 插入数据的 SQL 语句 -->
    <insert id="insertPatentTotal" parameterType="map">
        INSERT INTO patent_total (
            year, transfers, licenses, pledges,
            grade_a, grade_b, grade_c, grade_d, grade_e,
            applications, authorizedCounts, publishedCounts,
            state_one, state_two, state_three
        ) VALUES (
                     #{year}, #{transfers}, #{licenses}, #{pledges},
                     #{grade_a}, #{grade_b}, #{grade_c}, #{grade_d}, #{grade_e},
                     #{applications}, #{authorizedCounts}, #{publishedCounts},
                     #{state_one}, #{state_two}, #{state_three}
                 )
    </insert>

    <!-- 动态插入语句 -->
    <insert id="insertPatent" parameterType="map" >
        <!-- 注释：动态插入patent_info表数据 -->
        INSERT INTO patent_info (
        publication_number,
        application_number,
        application_date,
        patent_name,
        brief_statement,
        abstract,
        main_claim,
        agency,
        inventors,
        applicants,
        applicant_country,
        publication_date,
        ipc_class
        ) VALUES (
        #{publicationNumber},          <!-- 公开号 -->
        #{applicationNumber},          <!-- 申请号 -->
        #{applicationDate},            <!-- 申请日 -->
        #{patentName},                 <!-- 发明名称 -->
        #{briefStatement},             <!-- 简要说明 -->
        #{abstract},               <!-- 摘要 -->
        #{mainClaim},                  <!-- 主权力要求 -->
        #{agency},                     <!-- 代理机构名称 -->
        #{inventors},                  <!-- 发明人 -->
        #{applicants},                 <!-- 申请人 -->
        #{applicantCountry},           <!-- 申请人所在国家/地区/组织 -->
        #{publicationDate},            <!-- 公开日期 -->
        #{ipcClass}                   <!-- IPC分类（公开） -->
        )
    </insert>


    <!-- 定义一个名为 countPatentsByYearMonth 的查询操作 -->
    <select id="countPatentsByYearMonth" resultMap="map">
        SELECT
            DATE_FORMAT(STR_TO_DATE(application_date, '%Y.%m.%d'), '%Y') AS year,
    DATE_FORMAT(STR_TO_DATE(application_date, '%Y.%m.%d'), '%m') AS month,
    COUNT(*) AS count
        FROM
            patent_info
        GROUP BY
            year, month
        ORDER BY
            year ASC, month ASC;
    </select>

    <!-- 新增：按发明人统计每年申请量 -->
    <select id="countPatentsByInventorGroupByYear" parameterType="string" resultMap="map">
        SELECT
            YEAR(
            CASE
            WHEN application_date REGEXP '^[0-9]{4}\\.[0-9]{2}\\.[0-9]{2}$'
            THEN STR_TO_DATE(application_date, '%Y.%m.%d')
            WHEN application_date REGEXP '^[0-9]{4}\\-[0-9]{2}\\-[0-9]{2}$'
            THEN STR_TO_DATE(application_date, '%Y-%m-%d')
            ELSE NULL
            END
            ) AS year,
            COUNT(*) AS count
        FROM patent_info
        WHERE inventors LIKE CONCAT('%', #{inventorName}, '%')
          AND application_date != ''
        GROUP BY year
        HAVING year IS NOT NULL
        ORDER BY year;
    </select>



    <!--
        SQL查询接口：countIpcFirstLettersByInventor
        功能：根据发明人名字查询并统计专利IPC分类首字母出现次数。
        参数：inventorName - 发明人的名字片段，支持模糊匹配。
        返回值：一个包含IPC分类首字母及其出现次数的列表。
        逻辑：
            1. 使用递归CTE（Common Table Expression）SplitIPC将ipc_class字段中的多个分类拆分。
            2. 对于每个拆分出来的ipc_code，提取其首字母，并去重。
            3. 统计每个首字母出现的次数，并按次数降序排序。
    -->
    <select id="countIpcFirstLettersByInventor" parameterType="string" resultType="map">
        WITH RECURSIVE SplitIPC AS (
            SELECT
                id,
                CASE
                    WHEN LOCATE(';', ipc_class) > 0 THEN TRIM(SUBSTRING_INDEX(ipc_class, ';', 1))
                    WHEN LOCATE('==', ipc_class) > 0 THEN TRIM(SUBSTRING_INDEX(ipc_class, '==', 1))
                    ELSE TRIM(ipc_class)
                    END AS ipc_code,

                CASE
                    WHEN LOCATE(';', ipc_class) > 0 THEN SUBSTRING(ipc_class FROM LOCATE(';', ipc_class) + 1)
                    WHEN LOCATE('==', ipc_class) > 0 THEN SUBSTRING(ipc_class FROM LOCATE('==', ipc_class) + 2)
                    ELSE NULL
                    END AS remaining

            FROM patent_info
            WHERE inventors LIKE CONCAT('%', #{inventorName}, '%')

            UNION ALL

            -- 递归部分：继续处理剩余字符串
            SELECT
                id,
                CASE
                    WHEN LOCATE(';', remaining) > 0 THEN TRIM(SUBSTRING_INDEX(remaining, ';', 1))
                    WHEN LOCATE('==', remaining) > 0 THEN TRIM(SUBSTRING_INDEX(remaining, '==', 1))
                    ELSE TRIM(remaining)
                    END,

                CASE
                    WHEN LOCATE(';', remaining) > 0 THEN SUBSTRING(remaining FROM LOCATE(';', remaining) + 1)
                    WHEN LOCATE('==', remaining) > 0 THEN SUBSTRING(remaining FROM LOCATE('==', remaining) + 2)
                    ELSE NULL
                    END
            FROM SplitIPC
            WHERE remaining IS NOT NULL AND remaining != ''
            ),
            FirstLetter AS (
        SELECT DISTINCT
            id,
            LEFT(ipc_code, 1) AS first_letter
        FROM SplitIPC
        WHERE ipc_code IS NOT NULL AND ipc_code != ''
            )
        SELECT
            first_letter,
            COUNT(*) AS count
        FROM FirstLetter
        GROUP BY first_letter
        ORDER BY count DESC;
    </select>


    <!-- 根据发明人查询发明名称 -->
    <select id="selectPatentsByInventor" resultMap="map">
        SELECT patent_name
        FROM patent_info
        WHERE CONCAT(';', REPLACE(inventors, ' ', ''), ';') LIKE CONCAT('%;', #{inventorName}, ';%')
    </select>


    <select id="selectPatentByName" resultMap="map">
        SELECT *
        FROM patent_info
        WHERE patent_name = #{patentName}
    </select>



</mapper>